#define_import_path bevy_incandescent::hash

// Creative Commons Attribution-ShareAlike 4.0 International Public License
// Created by David Hoskins. May 2018
// Adapted by 443eb9#C. March 2024

const UIF = 1.0 / f32(0xffffffffu);

// The labeling refers to the number of values - hash(out)(in)...
//---------------------------------------------------------------------------------------------------------------
fn hash11u(q: u32) -> f32 {
	let n = q * vec2u(1597334673u, 3812015801u);
	let t = (n.x ^ n.y) * 1597334673u;
	return f32(t) * UIF;
}

fn hash11(p: f32) -> f32 {
	let n = u32(i32(p)) * vec2u(1597334673u, 3812015801u);
	let q = (n.x ^ n.y) * 1597334673u;
	return f32(q) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash12u(q: vec2u) -> f32 {
	let t = q * vec2u(1597334673u, 3812015801u);
	let n = (t.x ^ t.y) * 1597334673u;
	return f32(n) * UIF;
}

fn hash12(p: vec2f) -> f32 {
	let q = vec2u(vec2i(p)) * vec2u(1597334673u, 3812015801u);
	let n = (q.x ^ q.y) * 1597334673u;
	return f32(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash13u(q: vec3u) -> f32 {
	let t = q * vec3u(1597334673u, 3812015801u, 2798796415u);
	let n = (t.x ^ t.y ^ t.z) * 1597334673u;
	return f32(n) * UIF;
}

fn hash13(p: vec3f) -> f32 {
	let q = vec3u(vec3i(p)) * vec3u(1597334673u, 3812015801u, 2798796415u);
	let n = (q.x ^ q.y ^ q.z) * 1597334673u;
	return f32(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash14u(q: vec4u) -> f32 {
	let t = q * vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	let n = (t.x ^ t.y ^ t.z ^ t.w) * 1597334673u;
	return f32(n) * UIF;
}

fn hash14(p: vec4f) -> f32 {
	let q = vec4u(vec4i(p)) * vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	let n = (q.x ^ q.y ^ q.z ^ q.w) * 1597334673u;
	return f32(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash21u(q: u32) -> vec2f {
	var n = q * vec2u(1597334673u, 3812015801u);
	n = (n.x ^ n.y) * vec2u(1597334673u, 3812015801u);
	return vec2f(n) * UIF;
}

fn hash21(p: f32) -> vec2f {
	var n = u32(p) * vec2u(1597334673u, 3812015801u);
	n = (n.x ^ n.y) * vec2u(1597334673u, 3812015801u);
	return vec2f(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash22u(q: vec2u) -> vec2f {
	var t = q * vec2u(1597334673u, 3812015801u);
	t = (t.x ^ t.y) * vec2u(1597334673u, 3812015801u);
	return vec2f(t) * UIF;
}

fn hash22(p: vec2f) -> vec2f {
	var q = vec2u(p)*vec2u(1597334673u, 3812015801u);
	q = (q.x ^ q.y) * vec2u(1597334673u, 3812015801u);
	return vec2f(q) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash23u(q: vec3u) -> vec2f {
	let t = q * vec3u(1597334673u, 3812015801u, 2798796415u);
	let n = (t.x ^ t.y ^ t.z) * vec2u(1597334673u, 3812015801u);
	return vec2f(n) * UIF;
}

fn hash23(p: vec3f) -> vec2f {
	let q = vec3u(p) * vec3u(1597334673u, 3812015801u, 2798796415u);
	let n = (q.x ^ q.y ^ q.z) * vec2u(1597334673u, 3812015801u);

	return vec2f(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash31u(q: u32) -> vec3f {
	var n = q * vec3u(1597334673u, 3812015801u, 2798796415u);
	n = (n.x ^ n.y ^ n.z) * vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(n) * UIF;
}

fn hash31(p: f32) -> vec3f {
	var n = u32(p) * vec3u(1597334673u, 3812015801u, 2798796415u);
	n = (n.x ^ n.y ^ n.z) * vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash32u(q: vec2u) -> vec3f {
	var n = q.xyx * vec3u(1597334673u, 3812015801u, 2798796415u);
	n = (n.x ^ n.y ^n.z) * vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(n) * UIF;
}

fn hash32(q: vec2f) -> vec3f {
	var n = vec3u(q.xyx) * vec3u(1597334673u, 3812015801u, 2798796415u);
	n = (n.x ^ n.y ^ n.z) * vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(n) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash33u(q: vec3u) -> vec3f {
	var t = q * vec3u(1597334673u, 3812015801u, 2798796415u);
	t = (t.x ^ t.y ^ t.z)*vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(t) * UIF;
}

fn hash33(p: vec3f) -> vec3f {
	var q = vec3u(p) * vec3u(1597334673u, 3812015801u, 2798796415u);
	q = (q.x ^ q.y ^ q.z)*vec3u(1597334673u, 3812015801u, 2798796415u);
	return vec3f(q) * UIF;
}

//---------------------------------------------------------------------------------------------------------------
fn hash44u(q: vec4u) -> vec4f {
	var t = q * vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	t = (t.x ^ t.y ^ t.z ^ t.w)*vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	return vec4f(t) * UIF;
}

fn hash44(p: vec4f) -> vec4f {
	var q = vec4u(p) * vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	q = (q.x ^ q.y ^ q.z ^ q.w)*vec4u(1597334673u, 3812015801u, 2798796415u, 1979697957u);
	return vec4f(q) * UIF;
}
